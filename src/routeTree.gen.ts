/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WpscanRouteImport } from './routes/wpscan'
import { Route as AddWebsiteRouteImport } from './routes/add-website'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WebsitesIdRouteImport } from './routes/websites.$id'

const WpscanRoute = WpscanRouteImport.update({
  id: '/wpscan',
  path: '/wpscan',
  getParentRoute: () => rootRouteImport,
} as any)
const AddWebsiteRoute = AddWebsiteRouteImport.update({
  id: '/add-website',
  path: '/add-website',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WebsitesIdRoute = WebsitesIdRouteImport.update({
  id: '/websites/$id',
  path: '/websites/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add-website': typeof AddWebsiteRoute
  '/wpscan': typeof WpscanRoute
  '/websites/$id': typeof WebsitesIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add-website': typeof AddWebsiteRoute
  '/wpscan': typeof WpscanRoute
  '/websites/$id': typeof WebsitesIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/add-website': typeof AddWebsiteRoute
  '/wpscan': typeof WpscanRoute
  '/websites/$id': typeof WebsitesIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/add-website' | '/wpscan' | '/websites/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/add-website' | '/wpscan' | '/websites/$id'
  id: '__root__' | '/' | '/add-website' | '/wpscan' | '/websites/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddWebsiteRoute: typeof AddWebsiteRoute
  WpscanRoute: typeof WpscanRoute
  WebsitesIdRoute: typeof WebsitesIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/wpscan': {
      id: '/wpscan'
      path: '/wpscan'
      fullPath: '/wpscan'
      preLoaderRoute: typeof WpscanRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add-website': {
      id: '/add-website'
      path: '/add-website'
      fullPath: '/add-website'
      preLoaderRoute: typeof AddWebsiteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/websites/$id': {
      id: '/websites/$id'
      path: '/websites/$id'
      fullPath: '/websites/$id'
      preLoaderRoute: typeof WebsitesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddWebsiteRoute: AddWebsiteRoute,
  WpscanRoute: WpscanRoute,
  WebsitesIdRoute: WebsitesIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
